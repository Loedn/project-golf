
<div class="course-show-container">
  <div class="flex">
   <%= render 'shared/course_sidebar' %>
    <div class="show--content dashboard--content">
      <div id="course-details", class="show--content__box course-description">
      <h2>Edit Course Details</h2>
      <i>You can update the details of your golf course here:</i>
        <%= simple_form_for @course, method: :patch do |f| %>
          <%= f.error_notification %>
          <%= f.input :name %>
          <%= f.input :address %>
          <%= f.input :email %>
          <%= f.input :phone %>
          <%= f.input :price %>
          <%= f.input :image, label: "Upload a new image"%>
          <%= f.input :image_cache, as: :hidden %>
          <%= f.input :description, label: "Update the description", :as => :text, :input_html => {:rows => 5} %>
          <%= f.submit 'Update golf course details' %>
          <% end %>
      </div>

      <div class="show--content__box course-description">
      <h2>Opening Times</h2>
        <%= simple_form_for @course do |f| %>
        <% week_days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] %>
          <%= f.input :disabled_days, label: "Tick days the golf course is closed:", collection: week_days, as: :check_boxes, value_method: lambda { |d| week_days.index(d) } %>
        <%= f.submit 'Update disabled days' %>
        <% end %>
      </div>
      <div class="show--content__box course-description">
      <h2>Course Specifics</h2>
        <%= simple_form_for @course, method: :patch do |f| %>
          <%= f.input :size, collection: ['short', 'medium', 'long'] %>
          <%= f.input :water, as: :boolean %>
          <%= f.input :sand, as: :boolean %>
          <%= f.input :trees, as: :boolean %>
          <%= f.input :plain, as: :boolean %>
          <%= f.submit 'Update golf course details' %>
        <% end %>

      </div>
      <div id= "course-holes", class="show--content__box course-description course-holes">
        <h2>Holes</h2>
        <p>Number of holes: <%= @course.holes.count %></p>
        <p>Hole/Par</p>
        <%= simple_form_for(@course) do |f| %>
          <% @course.holes.each do |hole| %>
            <%= f.simple_fields_for hole do |p| %>
            <div class="course-hole">
              <%= p.input :hole_id, as: :hidden, input_html: {value: hole.id } %>
              <%= p.input :name, label: false, wrapper_html: { class: 'course-hole-name' }%>
              <%= p.input :par, label: false, wrapper_html: { class: 'course-hole-par' }%>
            </div>
            <% end %>
          <% end %>
          <%= f.submit 'Update holes' %>

        <% end %>


      </div>
      <div id="course-bookings", class="show--content__box course-description course-bookings">
        <h2>Events Booked on Your Course</h2>
        <% @events.each do |event| %>
          <p><b><%= event.title %> </b> (<%= event.timeslot.strftime('%A, %d %b - %H:%M') %>)</p>
          <p>Outstanding balance: <%= event.balance %></p>
          <p>Owner: <%= event.user.first_name %></p>
        <% end %>


      </div>

    </div>
  </div>
</div>

<% content_for(:after_js) do %>
  <script type="text/javascript">

  const styles = [
    {
        "featureType": "administrative.land_parcel",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "landscape.man_made",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "poi",
        "elementType": "labels",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "labels",
        "stylers": [
            {
                "visibility": "simplified"
            },
            {
                "lightness": 20
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "geometry",
        "stylers": [
            {
                "hue": "#f49935"
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "labels",
        "stylers": [
            {
                "visibility": "simplified"
            }
        ]
    },
    {
        "featureType": "road.arterial",
        "elementType": "geometry",
        "stylers": [
            {
                "hue": "#fad959"
            }
        ]
    },
    {
        "featureType": "road.arterial",
        "elementType": "labels",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "road.local",
        "elementType": "geometry",
        "stylers": [
            {
                "visibility": "simplified"
            }
        ]
    },
    {
        "featureType": "road.local",
        "elementType": "labels",
        "stylers": [
            {
                "visibility": "simplified"
            }
        ]
    },
    {
        "featureType": "transit",
        "elementType": "all",
        "stylers": [Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "all",
        "stylers": [
            {
                "hue": "#a1cdfc"
            },
            {
                "saturation": 30
            },
            {
                "lightness": 49
            }
        ]
    }
  ];

  var handler = Gmaps.build('Google', { markers: { clusterer: undefined } });
    handler.buildMap({ provider: {styles: styles }, internal: { id: 'map' } }, function() {
      markers = handler.addMarkers(<%= raw [{lat: @course.latitude, lng: @course.longitude}].to_json %>);
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();
       handler.getMap().setZoom(12);
    });
  </script>
<% end %>
